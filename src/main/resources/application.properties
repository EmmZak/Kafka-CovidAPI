# ===================================================================
# TP-Kafka
# Authors: Delphin Rukundo
#        & Emmanuel Zakaryan
#        & Elyes Boufdil
#        & Lucas Lernoud
# ===================================================================

# server port
server.port=2181

# consumer configurations
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=covid_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# producer configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# PostgreSQL configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/covid19db
spring.datasource.username=postgres
spring.datasource.password=Pa$$w0rd!
spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.show_sql=false
logging.level.org.springframework=OFF
logging.level.root=OFF
logging.level.org.hibernate=OFF
